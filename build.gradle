buildscript {
    repositories {
        mavenCentral()
        //Needed only for SNAPSHOT versions
        //maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.20.0"
    }
}

apply plugin: "java"
apply plugin: "signing"
apply plugin: "maven"
apply plugin: "maven"
apply plugin: "io.codearte.nexus-staging"

group = "uk.codenest"
archivesBaseName = "mongofly"
version = "1.0.3.RELEASE"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile group: "org.mongodb", name: "mongo-java-driver", version: "3.10.2"
    compile group: "org.apache.commons", name: "commons-lang3", version: "3.9"

    compile group: 'org.springframework', name: 'spring-beans', version: '5.1.7.RELEASE'
    
    compileOnly group: "org.projectlombok", name: "lombok", version: "1.18.8"
    annotationProcessor group: "org.projectlombok", name: "lombok", version: "1.18.8"

    compile group: "org.slf4j", name: "slf4j-api", version: "1.7.26"

    testCompile group: "org.slf4j", name: "slf4j-log4j12", version: "1.7.26"
    testCompile "log4j:log4j:1.2.17"
    testCompile "org.testng:testng:6.14.3"
}

nexusStaging {
    packageGroup = "uk.codenest"
}

// Add Javadoc JAR and sources JAR to artifact
task javadocJar(type: Jar) {
    classifier = "javadoc"
    from javadoc
}
task sourcesJar(type: Jar) {
    classifier = "sources"
    from sourceSets.main.allSource
}
artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

// Build, sign, and upload
uploadArchives {
    repositories {
        mavenDeployer {

            // Sign POM
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }

            // Destination
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername == null ? "" : ossrhUsername, password: ossrhPassword == null ? "" : ossrhPassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername == null ? "" : ossrhUsername, password: ossrhPassword == null ? "" : ossrhPassword)
            }

            // Add required metadata to POM
            pom.project {
                name = "mongofly"
                packaging = "jar"
                description = "Java MongoDB migration tool"
                url = "https://github.com/CodenestLtd/mongofly"

                scm {
                    url = "https://github.com/CodenestLtd/mongofly"
                    connection = "scm:git:git@github.com:CodenestLtd/mongofly.git"
                    developerConnection = "scm:git:git@github.com:CodenestLtd/mongofly.git"
                }

                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url =  "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        id = "arana198"
                        name = "Ankit Rana"
                        email = "accounts@codenest.uk"
                        organization = "Codenest"
                        organizationUrl = "http://codenest.uk"
                    }
                }
            }
        }
    }
}
